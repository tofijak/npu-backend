// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpuApi.Data;

#nullable disable

namespace NpuApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NpuApi.Models.Creation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Creations");
                });

            modelBuilder.Entity("NpuApi.Models.CreationScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Creativity")
                        .HasColumnType("integer");

                    b.Property<int>("Uniqueness")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("CreationId", "UserId")
                        .IsUnique();

                    b.ToTable("CreationScores");
                });

            modelBuilder.Entity("NpuApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ecbfde3-df9e-4e60-a220-558609f1fe56"),
                            CreatedAt = new DateTime(2025, 5, 2, 14, 46, 51, 542, DateTimeKind.Utc),
                            Email = "admin@oneringtorulethemallinnarnia.com",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("NpuApi.Models.Creation", b =>
                {
                    b.HasOne("NpuApi.Models.User", "User")
                        .WithMany("Creations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NpuApi.Models.CreationScore", b =>
                {
                    b.HasOne("NpuApi.Models.Creation", "Creation")
                        .WithMany("CreationScores")
                        .HasForeignKey("CreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NpuApi.Models.User", "User")
                        .WithMany("CreationScores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NpuApi.Models.Creation", b =>
                {
                    b.Navigation("CreationScores");
                });

            modelBuilder.Entity("NpuApi.Models.User", b =>
                {
                    b.Navigation("CreationScores");

                    b.Navigation("Creations");
                });
#pragma warning restore 612, 618
        }
    }
}
